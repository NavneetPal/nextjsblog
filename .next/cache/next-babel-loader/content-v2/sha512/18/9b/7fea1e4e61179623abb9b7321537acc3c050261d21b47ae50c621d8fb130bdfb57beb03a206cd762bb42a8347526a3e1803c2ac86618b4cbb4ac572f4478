{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\reactPractice\\\\nextjsmainproject\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://www.artnews.com/wp-content/uploads/2019/11/british-museum.jpg\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://navneet:nakul@cluster0.aipts.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meet => ({\n      params: {\n        meetupId: meet._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://navneet:nakul@cluster0.aipts.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: \"https://www.artnews.com/wp-content/uploads/2019/11/british-museum.jpg\",\n        title: \"First Meetup\",\n        address: \"Some Street 5, Some City\",\n        description: \"This is first meetup\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/HP/Desktop/reactPractice/nextjsmainproject/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meet","params","meetupId","toString","getStaticProps","context","console","log","props","meetupData","id","image","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,uEADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,0BAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAYA,OAAO,eAAeC,cAAf,GAA+B;AAEpC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,4FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAYC,IAAI,KAAG;AACvBC,MAAAA,MAAM,EAAC;AACLC,QAAAA,QAAQ,EAACF,IAAI,CAACN,GAAL,CAASS,QAAT;AADJ;AADgB,KAAH,CAAhB;AAFD,GAAP;AAQD;AAGD,OAAO,eAAgBC,cAAhB,CAA+BC,OAA/B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAACG,OAAO,CAACJ,MAAR,CAAeC,QAA9B;AACA,QAAMf,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,4FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,SAAO;AACLM,IAAAA,KAAK,EAAC;AACJC,MAAAA,UAAU,EAAC;AACTC,QAAAA,EAAE,EAACR,QADM;AAETS,QAAAA,KAAK,EAAC,uEAFG;AAGTC,QAAAA,KAAK,EAAC,cAHG;AAITC,QAAAA,OAAO,EAAC,0BAJC;AAKTC,QAAAA,WAAW,EAAC;AALH;AADP;AADD,GAAP;AAWD;AAID,eAAe7B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetails = () => {\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://www.artnews.com/wp-content/uploads/2019/11/british-museum.jpg\"\r\n      title=\"First Meetup\"\r\n      address=\"Some Street 5, Some City\"\r\n      description=\"This is first meetup\"\r\n    />\r\n  );\r\n}\r\n\r\n\r\nexport async function getStaticPaths(){\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://navneet:nakul@cluster0.aipts.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({},{_id:1}).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths:meetups.map(meet=>({\r\n      params:{\r\n        meetupId:meet._id.toString()\r\n      }\r\n    }))\r\n  }\r\n}\r\n\r\n\r\nexport async  function getStaticProps(context){\r\n  //fetch data for single meetup\r\n  const meetupId=context.params.meetupId\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://navneet:nakul@cluster0.aipts.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({},{_id:1}).toArray();\r\n\r\n  client.close();\r\n\r\n  console.log(meetupId);\r\n  return {\r\n    props:{\r\n      meetupData:{\r\n        id:meetupId,\r\n        image:\"https://www.artnews.com/wp-content/uploads/2019/11/british-museum.jpg\",\r\n        title:\"First Meetup\",\r\n        address:\"Some Street 5, Some City\",\r\n        description:\"This is first meetup\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}